--------------- Server Making ---------------

1. npm init -y (install package.json)

2. npm i pg dotenv express bcryptjs jsonwebtoken sequelize sequelize-cli (install package yang dibutuhkan)

3. npm i nodemon --save (kalo mau pake nodemon)

4. Bikin komponen tambahan 
    - mkdir Controllers Routers
	- touch app.js .gitignore ./Controllers/controller.js ./Routers/index.js
	- .gitignore (node_modules dan .env)

5. npx sequelize init (setup database) --> npx sequelize db:create (bikin database)

6. bikin migration (yang ada foreignKey di create dulu (paling atas))
    - npx sequelize model:create --name Article --attributes title:string,content:text,imgUrl:string,createdAt:date,updatedAt:date,categoryId:integer,authorId:integer
    - npx sequelize model:create --name User --attributes username:string,email:string,password:string,role:string,phoneNumber:string,address:string
    - npx sequelize model:create --name Category --attributes name:string
    - npx sequelize db:migrate (jalankan migration)

7. bikin seed (jika dibutuhkan)
    - npx sequelize seed:create --name 'seedUser' 

    === Contoh di dalam seed folder ===
    saat dibagian up : 
        1. ambil data dulu (bisa pakai require/axios)
        2. mapping (.map)
        3. delete __.id -> karena akan auto buat dari id 1 di database
        4. ambil data yang diinginkan, setting createdAt dan updatedAt sebagai new Date();
        5. jangan lupa di return 
        

    dibagian up -> await queryInterface.bulkInsert('Users', data);
    dibagian down -> await queryInterface.bulkDelete('Users', null, {})

    - npx sequelize db:seed:all (jalan seeding)

8. Bikin asosiasi dan validasi
    - Assosiasi (https://sequelize.org/docs/v6/core-concepts/assocs/)
	- Validate (https://sequelize.org/docs/v6/core-concepts/validations-and-constraints/)

9. Setting app.js, Routers, Controllers
    - app.js
        1. express, port and app (https://expressjs.com/en/starter/hello-world.html)
        2. body parse, urlencoded true (https://www.geeksforgeeks.org/express-js-express-urlencoded-function/)\
        3. use router 
    
    - Routers (index.js)
        1. touch ./Routers/userRouter (tambahkan seperlunya eg: ./Routers/--Router)
        2. module.exports tiap routing. Alur [app.js] <- [index.js] <- [routerApapun.js]

    - Controllers 
        1. touch ./Controllers/userController ./Controllers/mainController
        2. module.exports tiap controller
        3. const {--} = require('--') -> yang dibutuhkan di controller apa saja
